services:
  # MongoDB (Lightweight configuration)
  mongodb:
    image: mongo:7
    container_name: cosmos2048-mongodb-low-mem
    expose:
      - "27017"
    environment:
      - MONGO_INITDB_DATABASE=cosmos2048_prod
    volumes:
      - mongodb_data:/data/db
    networks:
      - cosmos2048-network
    restart: unless-stopped
    # Memory limits for 1GB system
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    command: mongod --wiredTigerCacheSizeGB 0.25 --quiet
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' || mongo --eval 'db.adminCommand(\"ping\")'"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Memory optimized)
  api:
    build: 
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: cosmos2048-api-low-mem
    expose:
      - "5017"
    environment:
      - NODE_ENV=production
      - PORT=5017
      - MONGODB_URI=mongodb://mongodb:27017/cosmos2048_prod
      - JWT_SECRET=${JWT_SECRET:-your-super-secure-jwt-secret-key}
      # Node.js memory optimization
      - NODE_OPTIONS=--max_old_space_size=256
    depends_on:
      - mongodb
    networks:
      - cosmos2048-network
    restart: unless-stopped
    # Memory limits
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 150M

  # Frontend Next.js (Lightweight - no build, use development)
  web:
    build: 
      context: ./apps/web
      dockerfile: Dockerfile
      target: development
    container_name: cosmos2048-frontend-low-mem
    expose:
      - "3017"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost/api
      # Next.js memory optimization
      - NODE_OPTIONS=--max_old_space_size=256
    depends_on:
      - api
    networks:
      - cosmos2048-network
    restart: unless-stopped
    # Memory limits
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 150M

  # Nginx Reverse Proxy (Ultra lightweight)
  nginx:
    image: nginx:alpine
    container_name: cosmos2048-nginx-low-mem
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-low-memory.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/maintenance.html:/usr/share/nginx/html/maintenance.html:ro
    depends_on:
      - web
      - api
    networks:
      - cosmos2048-network
    restart: unless-stopped
    # Minimal memory usage
    deploy:
      resources:
        limits:
          memory: 64M
        reservations:
          memory: 32M

networks:
  cosmos2048-network:
    driver: bridge
    name: cosmos2048-low-mem-network

volumes:
  mongodb_data:
    name: cosmos2048-mongodb-low-mem-data